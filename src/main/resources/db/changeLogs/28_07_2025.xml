<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <!-- Создание таблицы product_colors -->
    <changeSet id="create-product-colors-table" author="JekiChan08">
        <createTable tableName="product_colors">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="hex" type="varchar(7)">
                <constraints nullable="false"/>
            </column>
            <column name="product_id" type="uuid">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addForeignKeyConstraint baseTableName="product_colors"
                                 baseColumnNames="product_id"
                                 referencedTableName="products"
                                 referencedColumnNames="id"
                                 constraintName="fk_product_colors_product"
                                 onDelete="CASCADE"/>
    </changeSet>

    <!-- Переименование и изменение таблицы product_images -->
    <changeSet id="rename-and-modify-product-images-table" author="JekiChan08">
        <!-- Создаем новую таблицу product_color_images -->
        <createTable tableName="product_color_images">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="color_id" type="uuid">
                <constraints nullable="false"/>
            </column>
            <column name="image_id" type="uuid">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addForeignKeyConstraint baseTableName="product_color_images"
                                 baseColumnNames="color_id"
                                 referencedTableName="product_colors"
                                 referencedColumnNames="id"
                                 constraintName="fk_product_color_images_color"
                                 onDelete="CASCADE"/>

        <addForeignKeyConstraint baseTableName="product_color_images"
                                 baseColumnNames="image_id"
                                 referencedTableName="files"
                                 referencedColumnNames="id"
                                 constraintName="fk_product_color_images_files"
                                 onDelete="CASCADE"/>
    </changeSet>

    <!-- Миграция данных из старой таблицы product_images (если нужно) -->
<!--    <changeSet id="migrate-product-images-data" author="JekiChan08">-->
<!--        <comment>-->
<!--            Этот changeSet нужен только если у вас уже есть данные в product_images-->
<!--            и вы хотите их сохранить. Если данных нет, можно пропустить.-->
<!--        </comment>-->

<!--        &lt;!&ndash; Создаем временный цвет "default" для существующих изображений &ndash;&gt;-->
<!--        <sql>-->
<!--            INSERT INTO product_colors (id, name, hex, product_id)-->
<!--            SELECT-->
<!--                gen_random_uuid(),-->
<!--                'Default',-->
<!--                '#000000',-->
<!--                pi.product_id-->
<!--            FROM product_images pi-->
<!--            GROUP BY pi.product_id-->
<!--                ON CONFLICT DO NOTHING;-->
<!--        </sql>-->

<!--        &lt;!&ndash; Переносим изображения в новую таблицу &ndash;&gt;-->
<!--        <sql>-->
<!--            INSERT INTO product_color_images (id, color_id, image_id)-->
<!--            SELECT-->
<!--                gen_random_uuid(),-->
<!--                pc.id,-->
<!--                pi.image_id-->
<!--            FROM product_images pi-->
<!--                     JOIN product_colors pc ON pc.product_id = pi.product_id AND pc.name = 'Default';-->
<!--        </sql>-->
<!--    </changeSet>-->

    <!-- Удаление старой таблицы product_images (ОСТОРОЖНО!) -->
    <changeSet id="drop-old-product-images-table" author="JekiChan08">
        <comment>
            ВНИМАНИЕ: Этот changeSet удалит старую таблицу product_images.
            Убедитесь, что миграция данных прошла успешно!
            Если нужно сохранить старую таблицу, закомментируйте этот changeSet.
        </comment>

        <dropForeignKeyConstraint baseTableName="product_images"
                                  constraintName="fk_product_images_product"/>
        <dropForeignKeyConstraint baseTableName="product_images"
                                  constraintName="fk_product_images_files"/>
        <dropTable tableName="product_images"/>
    </changeSet>

    <!-- Добавляем индексы для оптимизации -->
    <changeSet id="add-product-colors-indexes" author="JekiChan08">
        <createIndex tableName="product_colors" indexName="idx_product_colors_product_id">
            <column name="product_id"/>
        </createIndex>

        <createIndex tableName="product_color_images" indexName="idx_product_color_images_color_id">
            <column name="color_id"/>
        </createIndex>

        <createIndex tableName="product_color_images" indexName="idx_product_color_images_image_id">
            <column name="image_id"/>
        </createIndex>
    </changeSet>

    <!-- Сидинговая реализация-->
    <changeSet id="pc" author="aiteginbaratov">
        <loadData tableName="product_colors" file="data/product_colors.csv" relativeToChangelogFile="true" separator=";"/>
    </changeSet>
    <changeSet id="pci" author="aiteginbaratov">
        <loadData tableName="product_color_images" file="data/product_color_image.csv" relativeToChangelogFile="true" separator=";"/>
    </changeSet>

</databaseChangeLog>